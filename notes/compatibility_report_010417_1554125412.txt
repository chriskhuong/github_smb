Converting GML script : ${project_dir}\scripts\scr_get_input\scr_get_input.gml
Converted string : line 4 : 'D' -> "D"
Converted string : line 5 : 'A' -> "A"
Converted string : line 6 : 'S' -> "S"
Converted string : line 7 : 'W' -> "W"

Converting GML script : ${project_dir}\scripts\scr_getInput\scr_getInput.gml
Converted string : line 3 : 'D' -> "D"
Converted string : line 4 : 'A' -> "A"
Converted string : line 5 : 'W' -> "W"
Converted string : line 6 : 'S' -> "S"
Converted string : line 11 : 'C' -> "C"
Converted string : line 22 : 'R' -> "R"
Converted string : line 23 : '/' -> "/"
Converted string : line 24 : '[' -> "["
Converted string : line 25 : ']' -> "]"

Converting GML script : ${project_dir}\objects\obj_dialog\Create_0.gml
Converted builtin : line 7 : view_wview[0] -> __view_get( e__VW.WView, 0 )

Converting GML script : ${project_dir}\objects\obj_dialog\Draw_64.gml
Converted builtin : line 24 : view_xview[0] -> __view_get( e__VW.XView, 0 )
Converted builtin : line 25 : view_yview[0] -> __view_get( e__VW.YView, 0 )

Converting GML script : ${project_dir}\objects\obj_playerStats\Step_0.gml
Converted builtin : line 48 : view_wview = obj_resolutionManager.ideal_width/view_zoom -> __view_set( e__VW.WView, 0, obj_resolutionManager.ideal_width/view_zoom )
Converted builtin : line 49 : view_hview = obj_resolutionManager.ideal_height/view_zoom -> __view_set( e__VW.HView, 0, obj_resolutionManager.ideal_height/view_zoom )

Converting GML script : ${project_dir}\objects\obj_game_camera\Step_0.gml
Converted builtin : line 35 : view_xview[0] = view_wview * cam_scale -> __view_set( e__VW.XView, 0, view_wview * cam_scale )
Converted builtin : line 36 : view_yview[0] = view_hview * cam_scale -> __view_set( e__VW.YView, 0, view_hview * cam_scale )
Converted builtin : line 35 : view_wview -> __view_get( e__VW.WView, 0 )
Converted builtin : line 36 : view_hview -> __view_get( e__VW.HView, 0 )

Converting GML script : ${project_dir}\objects\obj_view\Step_0.gml
Converted builtin : line 23 : view_xview -> __view_get( e__VW.XView, 0 )
Converted builtin : line 21 : view_xview = -(view_wview/2) + x -> __view_set( e__VW.XView, 0, -(view_wview/2) + x )
Converted builtin : line 24 : view_yview -> __view_get( e__VW.YView, 0 )
Converted builtin : line 22 : view_yview = -(view_hview/2) + y -> __view_set( e__VW.YView, 0, -(view_hview/2) + y )
Converted builtin : line 23 : view_wview -> __view_get( e__VW.WView, 0 )
Converted builtin : line 24 : view_hview -> __view_get( e__VW.HView, 0 )
Converted builtin : line 23 : view_xview = clamp(__view_get( e__VW.XView, 0 ), 0, room_width - __view_get( e__VW.WView, 0 -> __view_set( e__VW.XView, 0, clamp(__view_get( e__VW.XView, 0 ), 0, room_width - __view_get( e__VW.WView, 0 )
Converted builtin : line 24 : view_yview = clamp(__view_get( e__VW.YView, 0 ), 0, room_height - __view_get( e__VW.HView, 0 -> __view_set( e__VW.YView, 0, clamp(__view_get( e__VW.YView, 0 ), 0, room_height - __view_get( e__VW.HView, 0 )
Converted builtin : line 21 : view_wview -> __view_get( e__VW.WView, 0 )
Converted builtin : line 22 : view_hview -> __view_get( e__VW.HView, 0 )

macOS icon ${options_dir}\mac\icons\icon512.png written out as 32-bit.
game speed set to 60
added compatibility script action/action_end_sound.gml
added compatibility script action/action_restart_game.gml
added compatibility script draw/draw_set_blend_mode.gml
added compatibility script instance/instance_create.gml
added compatibility script object/object_get_depth.gml
added compatibility script view/room_set_view.gml
added compatibility script view/__view_get.gml
added compatibility script view/__view_set.gml
added compatibility script view/__view_set_internal.gml
added compatibility script action/__init_action.gml
added compatibility script view/__init_view.gml
added compatibility script __init_global.gml
added compatibility script __global_object_depths.gml